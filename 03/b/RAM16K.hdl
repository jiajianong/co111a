// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl
//只有部分原創，但遇到真的想不出來時會參考網路上資源和已經繳交的同學，看懂後再寫

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(in=load,sel=address[0..1],a=a1,b=b2,c=c3,d=d4);
    
    RAM4K(in=in,load=a1,address=address[2..13],out=out1);
    RAM4K(in=in,load=b2,address=address[2..13],out=out2);
    RAM4K(in=in,load=c3,address=address[2..13],out=out3);
    RAM4K(in=in,load=d4,address=address[2..13],out=out4);
    
    Mux4Way16(a=out1,b=out2,c=out3,d=out4,sel=address[0..1],out=out);
}
